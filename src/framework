export default class AbstractView {
  constructor() {
    if (new.target === AbstractView) {
      throw new Error('Cannot instantiate AbstractView directly');
    }
  }

  // Геттер для шаблона (должен быть переопределён в дочерних классах)
  get template() {
    throw new Error('Template getter must be implemented');
  }

  // Метод для создания DOM-элемента из шаблона
  get element() {
    if (this._element) {
      return this._element;
    }
    this._element = this._createElement(this.template);
    this.bind(this._element);
    return this._element;
  }

  // Метод для создания элемента из строки HTML
  _createElement(template) {
    const newElement = document.createElement('div');
    newElement.innerHTML = template;
    return newElement.firstChild;
  }

  // Метод для привязки обработчиков событий (может быть переопределён в дочерних классах)
  bind() {
    // По умолчанию ничего не делает
  }

  // Метод для обновления View (может быть переопределён в дочерних классах)
  update() {
    // По умолчанию ничего не делает
  }
}